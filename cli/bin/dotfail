#!/bin/bash

# dotfail - exit the shell
#
# Synopsis
#   cmd || dotfail [message] [exit_status = 1]
#   cmd && dotfail [message] [exit_status = 1]
#
# Description
#   Exits the shell with `exit_status` (default: 1) and a `message`. You can use
#   the exit status of the last command executed with `$?`.
#
# Examples
#   source dotfail # needs to be sourced first
#
#   [[ "$#" -ge 2 ]] || dotfail 'missing file operand'
#   -> ?1 2 main script: missing file operand
#
#   [[ "$#" -lt 2 ]] && dotfail 'missing file operand'
#   -> ?1 3 main script: missing file operand
#
#   [ || dotfail 'missing ]' "$?"
#   -> ?2 4 main script: missing ]
dotfail() {
    local status="${2:-1}"
    echo "?$status $(caller 0) ${1:-}" 1>&2
    exit "$status"
}
