#!/bin/bash

set -o errexit -o nounset -o xtrace

# Mount $1 (device file or other identifier) if it hasn't already been mounted
# at $2 (directory path). SIGINT (^C) is disabled as a workaround to avoid
# problems during passphrase prompt for encrypted volumes: the device is kept
# busy by gvfs-udisks2-volume-monitor after SIGINT even though it shouldn't.
backup_mount() {
    trap '' INT # disable SIGINT
    test -d "$2" || gio mount --device="$1"
    trap '-' INT # restore SIGINT's default behaviour
}

# External drive
# * p1 100% · dm-crypt w/ LUKS · ext4: home
backup_extdrive() {
    local uuidcrypt='5c38e9ec-be27-410c-b0ab-7e9efac8d37e'
    local out="/run/media/$USER/extyayaka"

    # create borg snapshot before backup
    dotborg check
    dotborg snapshot '' 'backup_extdrive'

    # rsync home
    backup_mount "$uuidcrypt" "$out"
    rsync --archive --delete --protect-args --progress "$HOME" "$out"
    gio mount --unmount "$out"
}

# Phone SD card
# * p1 ~96 GiB · no encryption · F32: entertainment
# * p2 ~32 GiB · dm-crypt w/ LUKS · ext4: borg snapshots
backup_phone() {
    local media="/run/media/$USER"
    local uuid1='74DB-16F0'
    local uuid2crypt='0a87f529-3264-44fe-aee0-6876b833c98d'
    local uuid2plain='e52c217c-391c-424c-a2d5-382099ee2ac7'

    # rsync entertainment
    backup_mount "$uuid1" "$media/$uuid1"
    rsync --recursive --delete --protect-args --progress --size-only \
        "$HOME/Downloads" "$HOME/Music" "$HOME/.dotprivate" "$media/$uuid1"
    gio mount --unmount "$media/$uuid1"

    # rsync borg snapshots
    backup_mount "$uuid2crypt" "$media/$uuid2plain"
    rsync --archive --delete --protect-args --progress \
        "$HOME/Snapshots" "$media/$uuid2plain"
    gio mount --unmount "$media/$uuid2plain"
}

# Remote: gocryptfs -reverse: borg snapshots
backup_remote() {
    local snapshots_plain="$HOME/Snapshots"
    local snapshots_crypt="/run/user/$UID/dotbackup_mnt"

    gocryptfs -init -reverse "$snapshots_plain" || [[ "$?" -eq 7 ]]

    mkdir -p "$snapshots_crypt"
    gocryptfs -reverse "$snapshots_plain" "$snapshots_crypt"
    rclone sync --progress "$snapshots_crypt" 'remote:snapshots_crypt'
    fusermount -u "$snapshots_crypt"
}

help() {
    set +o xtrace
    echo 'usage: dotbackup extdrive'
    echo '       dotbackup phone'
    echo '       dotbackup remote'
    exit 1
}

case ${1:-} in
    extdrive) backup_extdrive;;
    phone) backup_phone;;
    remote) backup_remote;;
    *) help;;
esac
