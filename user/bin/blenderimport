#!/usr/bin/env python3

import sys, os

if 'bpy' not in sys.modules:
    assert len(sys.argv) > 1
    os.execlp('blender', 'blender', '--python', sys.argv[0], '--', *sys.argv[1:])
else:
    from pathlib import Path
    import bpy

    for data in (bpy.data.actions, bpy.data.cameras, bpy.data.lights,
                 bpy.data.materials, bpy.data.meshes, bpy.data.objects,
                 bpy.data.collections):
        for item in data:
            data.remove(item)

    for f in sys.argv[sys.argv.index('--') + 1:]:
        f = Path(f)
        assert f.exists()
        match f.suffix.lower():
            case '.dae':
                bpy.ops.wm.collada_import(filepath = str(f))
            case '.svg':
                bpy.ops.import_curve.svg(filepath = str(f))
            case '.stl':
                bpy.ops.wm.stl_import(filepath = str(f))
            case '.fbx':
                bpy.ops.import_scene.fbx(filepath = str(f))
            case '.gltf' | '.glb':
                bpy.ops.import_scene.gltf(filepath = str(f))
            case '.obj':
                bpy.ops.import_scene.obj(filepath = str(f))
            case '.usd' | '.usda' | '.usdc' | '.usdz':
                bpy.ops.wm.usd_import(filepath = str(f))
            case '.py':
                # ref: https://blender.stackexchange.com/q/8435
                # switch to scripting workspace
                bpy.context.window.workspace = bpy.data.workspaces['Scripting']

                # load and display file in text editor
                text_editor = next(area for area in bpy.data.screens['Scripting'].areas
                                        if area.type == 'TEXT_EDITOR')
                text_editor.spaces[0].text = bpy.data.texts.load(str(f))
            case _:
                raise RuntimeError(f'No importer associated with {f.suffix}')
