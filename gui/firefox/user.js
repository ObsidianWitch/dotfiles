user_pref("browser.download.animateNotifications", false);
user_pref("browser.feeds.showFirstRunUI", false);
user_pref("browser.formfill.enable", false);
user_pref("browser.fullscreen.animate", false);
user_pref("browser.newtabpage.enabled", false);
user_pref("browser.newtabpage.enhanced", false);
user_pref("browser.rights.3.shown", true);
user_pref("browser.search.suggest.enabled", false);
user_pref("browser.startup.homepage", "about:blank");
user_pref("browser.startup.page", 3);
user_pref("browser.tabs.animate", false);
user_pref("browser.tabs.warnOnClose", false);
user_pref("browser.urlbar.suggest.history", false);
user_pref("datareporting.healthreport.uploadEnabled", false);
user_pref("datareporting.policy.dataSubmissionPolicyAcceptedVersion", 2);
user_pref("devtools.theme", "light");
user_pref("general.warnOnAboutConfig", false);
user_pref("media.peerconnection.ice.default_address_only", true);
user_pref("network.cookie.cookieBehavior", 1);
user_pref("network.dns.disablePrefetch", true);
user_pref("network.http.speculative-parallel-limit", 0);
user_pref("network.prefetch-next", false);
user_pref("places.history.enabled", false);
user_pref("signon.rememberSignons", false);
user_pref("toolkit.telemetry.enabled", false);
user_pref("toolkit.telemetry.reportingpolicy.firstRun", false);

/* VimFX */
user_pref("extensions.VimFx.blacklist", "");
user_pref("extensions.VimFx.hints.chars", "azeqsdw xc");
user_pref("extensions.VimFx.late", false);
user_pref("extensions.VimFx.migration.0.applied", true);
user_pref("extensions.VimFx.migration.1.applied", true);
user_pref("extensions.VimFx.migration.2.applied", true);
user_pref("extensions.VimFx.migration.3.applied", true);
user_pref("extensions.VimFx.migration.4.applied", true);
user_pref("extensions.VimFx.migration.5.applied", true);
user_pref("extensions.VimFx.migration.6.applied", true);
user_pref("extensions.VimFx.mode.caret.copy_selection_and_exit", "");
user_pref("extensions.VimFx.mode.caret.move_down", "");
user_pref("extensions.VimFx.mode.caret.move_left", "");
user_pref("extensions.VimFx.mode.caret.move_right", "");
user_pref("extensions.VimFx.mode.caret.move_to_line_end", "");
user_pref("extensions.VimFx.mode.caret.move_to_line_start", "");
user_pref("extensions.VimFx.mode.caret.move_up", "");
user_pref("extensions.VimFx.mode.caret.move_word_left", "");
user_pref("extensions.VimFx.mode.caret.move_word_right", "");
user_pref("extensions.VimFx.mode.caret.toggle_selection", "");
user_pref("extensions.VimFx.mode.caret.toggle_selection_direction", "");
user_pref("extensions.VimFx.mode.find.exit", "<escape>");
user_pref("extensions.VimFx.mode.hints.increase_count", "");
user_pref("extensions.VimFx.mode.hints.rotate_markers_backward", "");
user_pref("extensions.VimFx.mode.hints.rotate_markers_forward", "");
user_pref("extensions.VimFx.mode.hints.toggle_complementary", "");
user_pref("extensions.VimFx.mode.ignore.exit", "");
user_pref("extensions.VimFx.mode.ignore.unquote", "");
user_pref("extensions.VimFx.mode.normal.click_browser_element", "");
user_pref("extensions.VimFx.mode.normal.copy_current_url", "");
user_pref("extensions.VimFx.mode.normal.dev", "");
user_pref("extensions.VimFx.mode.normal.edit_blacklist", "");
user_pref("extensions.VimFx.mode.normal.element_text_caret", "");
user_pref("extensions.VimFx.mode.normal.element_text_copy", "");
user_pref("extensions.VimFx.mode.normal.element_text_select", "");
user_pref("extensions.VimFx.mode.normal.enter_mode_ignore", "");
user_pref("extensions.VimFx.mode.normal.enter_reader_view", "");
user_pref("extensions.VimFx.mode.normal.esc", "");
user_pref("extensions.VimFx.mode.normal.find", "");
user_pref("extensions.VimFx.mode.normal.find_highlight_all", "/ <c-f>");
user_pref("extensions.VimFx.mode.normal.find_links_only", "");
user_pref("extensions.VimFx.mode.normal.find_next", "");
user_pref("extensions.VimFx.mode.normal.find_previous", "");
user_pref("extensions.VimFx.mode.normal.focus_location_bar", "");
user_pref("extensions.VimFx.mode.normal.focus_search_bar", "");
user_pref("extensions.VimFx.mode.normal.focus_text_input", "");
user_pref("extensions.VimFx.mode.normal.follow_copy", "");
user_pref("extensions.VimFx.mode.normal.follow_focus", "");
user_pref("extensions.VimFx.mode.normal.follow_in_focused_tab", "");
user_pref("extensions.VimFx.mode.normal.follow_in_private_window", "");
user_pref("extensions.VimFx.mode.normal.follow_in_window", "");
user_pref("extensions.VimFx.mode.normal.follow_multiple", "");
user_pref("extensions.VimFx.mode.normal.go_home", "");
user_pref("extensions.VimFx.mode.normal.go_to_root", "");
user_pref("extensions.VimFx.mode.normal.go_up_path", "");
user_pref("extensions.VimFx.mode.normal.help", "");
user_pref("extensions.VimFx.mode.normal.history_back", "");
user_pref("extensions.VimFx.mode.normal.history_forward", "");
user_pref("extensions.VimFx.mode.normal.history_list", "");
user_pref("extensions.VimFx.mode.normal.mark_scroll_position", "");
user_pref("extensions.VimFx.mode.normal.open_context_menu", "");
user_pref("extensions.VimFx.mode.normal.paste_and_go", "");
user_pref("extensions.VimFx.mode.normal.paste_and_go_in_tab", "");
user_pref("extensions.VimFx.mode.normal.quote", "");
user_pref("extensions.VimFx.mode.normal.reload", "");
user_pref("extensions.VimFx.mode.normal.reload_all", "");
user_pref("extensions.VimFx.mode.normal.reload_all_force", "");
user_pref("extensions.VimFx.mode.normal.reload_config_file", "");
user_pref("extensions.VimFx.mode.normal.reload_force", "");
user_pref("extensions.VimFx.mode.normal.scroll_down", "");
user_pref("extensions.VimFx.mode.normal.scroll_half_page_down", "");
user_pref("extensions.VimFx.mode.normal.scroll_half_page_up", "");
user_pref("extensions.VimFx.mode.normal.scroll_left", "");
user_pref("extensions.VimFx.mode.normal.scroll_page_down", "");
user_pref("extensions.VimFx.mode.normal.scroll_page_up", "");
user_pref("extensions.VimFx.mode.normal.scroll_right", "");
user_pref("extensions.VimFx.mode.normal.scroll_to_bottom", "");
user_pref("extensions.VimFx.mode.normal.scroll_to_left", "");
user_pref("extensions.VimFx.mode.normal.scroll_to_mark", "");
user_pref("extensions.VimFx.mode.normal.scroll_to_next_position", "");
user_pref("extensions.VimFx.mode.normal.scroll_to_previous_position", "");
user_pref("extensions.VimFx.mode.normal.scroll_to_right", "");
user_pref("extensions.VimFx.mode.normal.scroll_to_top", "");
user_pref("extensions.VimFx.mode.normal.scroll_up", "");
user_pref("extensions.VimFx.mode.normal.stop", "");
user_pref("extensions.VimFx.mode.normal.stop_all", "");
user_pref("extensions.VimFx.mode.normal.tab_close", "");
user_pref("extensions.VimFx.mode.normal.tab_close_other", "");
user_pref("extensions.VimFx.mode.normal.tab_close_to_end", "");
user_pref("extensions.VimFx.mode.normal.tab_duplicate", "");
user_pref("extensions.VimFx.mode.normal.tab_move_backward", "");
user_pref("extensions.VimFx.mode.normal.tab_move_forward", "");
user_pref("extensions.VimFx.mode.normal.tab_move_to_window", "");
user_pref("extensions.VimFx.mode.normal.tab_new", "");
user_pref("extensions.VimFx.mode.normal.tab_new_after_current", "");
user_pref("extensions.VimFx.mode.normal.tab_restore", "");
user_pref("extensions.VimFx.mode.normal.tab_restore_list", "");
user_pref("extensions.VimFx.mode.normal.tab_select_first", "");
user_pref("extensions.VimFx.mode.normal.tab_select_first_non_pinned", "");
user_pref("extensions.VimFx.mode.normal.tab_select_last", "");
user_pref("extensions.VimFx.mode.normal.tab_select_most_recent", "");
user_pref("extensions.VimFx.mode.normal.tab_select_next", "");
user_pref("extensions.VimFx.mode.normal.tab_select_oldest_unvisited", "");
user_pref("extensions.VimFx.mode.normal.tab_select_previous", "");
user_pref("extensions.VimFx.mode.normal.tab_toggle_pinned", "");
user_pref("extensions.VimFx.mode.normal.window_new", "");
user_pref("extensions.VimFx.mode.normal.window_new_private", "");

/* linkNinja */
user_pref("extensions.linkNinja.actionMenuTrigger.enabled", false);
user_pref("extensions.linkNinja.defaultAction", "openTabsOnDemand");
user_pref("extensions.linkNinja.firstRun", false);
user_pref("extensions.linkNinja.startTrigger.mouseButton", 0);
user_pref("extensions.linkNinja.startTrigger.shiftKey", true);
