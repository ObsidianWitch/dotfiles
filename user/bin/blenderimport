#!/usr/bin/env python3

import sys, os

if 'bpy' not in sys.modules:
    assert len(sys.argv) > 1
    os.execlp('blender', 'blender', '--python', sys.argv[0], '--', *sys.argv[1:])
else:
    import bpy
    from pathlib import Path

    bpy.context.preferences.view.show_splash = False
    bpy.ops.object.select_all(action = 'SELECT')
    bpy.ops.object.delete()

    for f in sys.argv[sys.argv.index('--') + 1:]:
        f = Path(f)
        assert f.exists()
        suffix_lower = f.suffix.lower()
        if suffix_lower == '.dae':
            bpy.ops.wm.collada_import(filepath = str(f))
        elif suffix_lower == '.svg':
            bpy.ops.import_curve.svg(filepath = str(f))
        elif suffix_lower == '.stl':
            bpy.ops.import_mesh.stl(filepath = str(f))
        elif suffix_lower == '.fbx':
            bpy.ops.import_scene.fbx(filepath = str(f))
        elif suffix_lower == '.gltf' or suffix_lower == '.glb':
            bpy.ops.import_scene.gltf(filepath = str(f))
        elif suffix_lower == '.obj':
            bpy.ops.import_scene.obj(filepath = str(f))
        elif suffix_lower == '.py':
            # ref: https://blender.stackexchange.com/q/8435
            # switch to scripting workspace
            bpy.context.window.workspace = bpy.data.workspaces['Scripting']

            # load and display file in text editor
            text_editor = next(area for area in bpy.data.screens['Scripting'].areas
                                    if area.type == 'TEXT_EDITOR')
            text = bpy.data.texts.load(str(f))
            text_editor.spaces[0].text = text

            # run script
            context = bpy.context.copy()
            context['edit_text'] = text
            bpy.ops.text.run_script(context)
        else:
            raise RuntimeError(f'No importer associated with {f.suffix}')
