#!/usr/bin/env python3

import sys, os

if 'bpy' not in sys.modules:
    assert len(sys.argv) == 2
    os.execlp('blender', 'blender', '--background', sys.argv[1], '--python', sys.argv[0])
else:
    import tempfile, contextlib
    from pxr import Usd
    import bpy

    def metadata(usdobject, indent=''):
        for k, v in usdobject.GetAllAuthoredMetadata().items():
            if k in ('specifier', 'typeName', 'custom', 'variability'): continue
            print(f'{indent}|{k}={v}')

    with tempfile.TemporaryDirectory() as dirpath:
        filepath = f'{dirpath}/out.usd'
        with contextlib.redirect_stdout(sys.stderr):
            bpy.ops.wm.usd_export(filepath=filepath, export_textures=False)

        scene = Usd.Stage.Open(filepath)
        nodes = [scene.GetPseudoRoot()] + list(scene.Traverse())
        nodes = sorted(nodes, key=lambda n: n.GetPath())
        for node in nodes:
            print(f'{node.GetPath()}: {node.GetTypeName()}')
            metadata(node, '  ')

            for p in node.GetAuthoredProperties():
                metadata(p, '    ')
                if isinstance(p, Usd.Relationship):
                    print(f'  {p.GetBaseName()}={p.GetTargets()}')
                elif isinstance(p, Usd.Attribute):
                    print(f'  {p.GetBaseName()}={p.Get()}')
                else:
                    raise NotImplementedError(p)
            print()
