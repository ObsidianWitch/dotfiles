#!/bin/bash

set -o errexit -o nounset -o xtrace

MEDIADIR="/run/media/$USER"
RUNTIMEDIR="/run/user/$UID"

# Mount $1 (device file or other identifier) if it hasn't already been mounted
# at $2 (directory path). SIGINT (^C) is disabled as a workaround to avoid
# problems during passphrase prompt for encrypted volumes: the device is kept
# busy by gvfs-udisks2-volume-monitor after SIGINT even though it shouldn't.
gio_mount() {
    trap '' INT # disable SIGINT
    test -d "$2" || gio mount --device="$1"
    trap '-' INT # restore SIGINT's default behaviour
}

SNAPSHOTS_PLAIN="$HOME/Snapshots"
SNAPSHOTS_CRYPT="$RUNTIMEDIR/gocryptfs/Snapshots"
# Mount encrypted view of $SNAPSHOTS_PLAIN to $SNAPSHOTS_CRYPT.
snapshots_mount() {
    rmdir "$SNAPSHOTS_CRYPT" || : # preventively remove empty directory to avoid syncing it
    test -d "$SNAPSHOTS_CRYPT" || {
        mkdir -p "$SNAPSHOTS_CRYPT"
        gocryptfs -reverse "$SNAPSHOTS_PLAIN" "$SNAPSHOTS_CRYPT"
    }
}
# Unmount $SNAPSHOTS_CRYPT and remove empty mountpoint.
snapshots_unmount() {
    fusermount -u "$SNAPSHOTS_CRYPT"
    rmdir "$SNAPSHOTS_CRYPT"
}

# External drive: p1 ext4 100%: dm-crypt w/ LUKS: home
backup_extdrive() {
    local uuid_crypt='5c38e9ec-be27-410c-b0ab-7e9efac8d37e'
    local uuid_plain='d51b9763-ba6a-4948-baba-b0e78cd5c28c'
    local out="$MEDIADIR/$uuid_plain"

    # create borg snapshot before backup
    dotborg check
    dotborg snapshot '' 'backup_extdrive'

    # rsync home
    gio_mount "$uuid_crypt" "$out"
    rsync --archive --delete --protect-args --progress "$HOME" "$out"
    gio mount --unmount "$out"
}

# Phone SD card: p1 F32 100%:
# * no encryption: entertainment
# * gocryptfs -reverse: borg snapshots
backup_phone() {
    local uuid='74DB-16F0'
    local out="$MEDIADIR/$uuid"
    gio_mount "$uuid" "$out"

    # rsync entertainment
    rsync --recursive --delete --protect-args --progress --size-only \
        "$HOME/Downloads" "$HOME/Music" "$out"

    # rsync encrypted borg snapshots
    snapshots_mount
    rsync --recursive --delete --protect-args --progress --size-only \
        "$SNAPSHOTS_CRYPT" "$out"
    snapshots_unmount

    gio mount --unmount "$out"
}

# Remote: gocryptfs -reverse: borg snapshots
backup_remote() {
    snapshots_mount
    rclone sync --progress "$SNAPSHOTS_CRYPT" 'remote:snapshots_crypt'
    snapshots_unmount
}

help() {
    set +o xtrace
    echo 'usage: dotbackup extdrive'
    echo '       dotbackup phone'
    echo '       dotbackup remote'
    exit 1
}

case ${1:-} in
    extdrive) backup_extdrive;;
    phone) backup_phone;;
    remote) backup_remote;;
    *) help;;
esac
